{
  "id": "host",
  "name": "host",
  "metaData": {
    "name": "host",
    "type": "app",
    "buildInfo": {
      "buildVersion": "0.0.0",
      "buildName": "@nx-react-webpack-mf-workspace/source"
    },
    "remoteEntry": {
      "name": "",
      "path": "",
      "type": "global"
    },
    "types": {
      "path": "",
      "name": "",
      "zip": "",
      "api": ""
    },
    "globalName": "host",
    "pluginVersion": "0.2.8",
    "publicPath": "auto"
  },
  "shared": [
    {
      "id": "host:react-dom",
      "name": "react-dom",
      "version": "18.3.1",
      "singleton": true,
      "requiredVersion": "^18.3.1",
      "assets": {
        "js": {
          "async": [
            "744.ee8395b5.js"
          ],
          "sync": [
            "89.082bd90e.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    },
    {
      "id": "host:react-router-dom",
      "name": "react-router-dom",
      "version": "6.11.2",
      "singleton": true,
      "requiredVersion": "^6.11.2",
      "assets": {
        "js": {
          "async": [
            "744.ee8395b5.js"
          ],
          "sync": [
            "833.4ae0c982.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    },
    {
      "id": "host:react",
      "name": "react",
      "version": "18.3.1",
      "singleton": true,
      "requiredVersion": "^18.3.1",
      "assets": {
        "js": {
          "async": [],
          "sync": [
            "744.ee8395b5.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    }
  ],
  "remotes": [
    {
      "federationContainerName": "promise new Promise((resolve, reject) => {\n        const remote_entry_url = 'remote1",
      "moduleName": "Module",
      "alias": "remote1",
      "entry": "https://lois_z_comcord_vision-bserjdm8jk_44-remote1-nx-ex-af04b5093-ze.bundlercorp.com/remoteEntry.js';\n        const library_type = 'var';\n        const sessionEdgeURL = window.sessionStorage.getItem('remote1.nx-example.zmzlois');\n        let edgeUrl = sessionEdgeURL ?? remote_entry_url;\n        let remote_name = 'remote1';\n        if (edgeUrl.indexOf('@') !== -1) {\n            [remote_name, edgeUrl] = edgeUrl.split('@');\n        }\n        const resolve_entry = [\n            fetch(edgeUrl, { method: 'HEAD' })\n                .then(() => edgeUrl)\n                .catch(() => false),\n        ];\n        Promise.race(resolve_entry)\n            .then((remoteUrl) => {\n            if (typeof remoteUrl !== 'string')\n                return;\n            const _win = window;\n            if (typeof _win[remote_name] !== 'undefined') {\n                return resolve(_win[remote_name]);\n            }\n            if (typeof __webpack_require__ !== 'undefined' &&\n                typeof __webpack_require__.l === 'function' &&\n                // @ts-expect-error - library_type is inherited enum type instead of string\n                library_type !== 'module') {\n                __webpack_require__.l(remoteUrl, () => {\n                    resolve(_win[remote_name]);\n                }, remote_name, remote_name);\n                return;\n            }\n            return new Function(`return import(\"${remoteUrl}\")`)()\n                .then((mod) => {\n                if (typeof _win[remote_name] !== 'undefined') {\n                    return resolve(_win[remote_name]);\n                }\n                return resolve(mod);\n            })\n                .catch((err) => reject(err));\n        })\n            .catch((err) => {\n            console.error(`Zephyr: error loading remote entry ${remote_entry_url}`, err);\n        });\n    })"
    },
    {
      "federationContainerName": "promise new Promise((resolve, reject) => {\n        const remote_entry_url = 'remote2",
      "moduleName": "Module",
      "alias": "remote2",
      "entry": "https://lois_z_comcord_vision_43-remote2-nx-example-zmzlo-d15e9aee1-ze.bundlercorp.com/remoteEntry.js';\n        const library_type = 'var';\n        const sessionEdgeURL = window.sessionStorage.getItem('remote2.nx-example.zmzlois');\n        let edgeUrl = sessionEdgeURL ?? remote_entry_url;\n        let remote_name = 'remote2';\n        if (edgeUrl.indexOf('@') !== -1) {\n            [remote_name, edgeUrl] = edgeUrl.split('@');\n        }\n        const resolve_entry = [\n            fetch(edgeUrl, { method: 'HEAD' })\n                .then(() => edgeUrl)\n                .catch(() => false),\n        ];\n        Promise.race(resolve_entry)\n            .then((remoteUrl) => {\n            if (typeof remoteUrl !== 'string')\n                return;\n            const _win = window;\n            if (typeof _win[remote_name] !== 'undefined') {\n                return resolve(_win[remote_name]);\n            }\n            if (typeof __webpack_require__ !== 'undefined' &&\n                typeof __webpack_require__.l === 'function' &&\n                // @ts-expect-error - library_type is inherited enum type instead of string\n                library_type !== 'module') {\n                __webpack_require__.l(remoteUrl, () => {\n                    resolve(_win[remote_name]);\n                }, remote_name, remote_name);\n                return;\n            }\n            return new Function(`return import(\"${remoteUrl}\")`)()\n                .then((mod) => {\n                if (typeof _win[remote_name] !== 'undefined') {\n                    return resolve(_win[remote_name]);\n                }\n                return resolve(mod);\n            })\n                .catch((err) => reject(err));\n        })\n            .catch((err) => {\n            console.error(`Zephyr: error loading remote entry ${remote_entry_url}`, err);\n        });\n    })"
    }
  ],
  "exposes": []
}